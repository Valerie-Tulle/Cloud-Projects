name: CI-CD Pipeline 

on: 
    push:
        branches:
            - main
    workflow_dispatch: 

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Log in to AZURE
              uses: azure/login@v1
              with:
                creds: ${{secrets.AZURE_CREDENTIALS}}

            - name: Set up Docker Build 
              uses: docker/setup-buildx-action@v2

            - name: Login to ACR
              run: |
                az acr login --name farhinACR 
              env:
                AZURE_CLI_PASSWORD: ${{secrets.AZURE_CLIENT_SECRET}}
                # echo ${{secrets.AZURE_CLIENT_SECRET}} | docker login ${{secrets.ACR_NAME}}.azurecr.io --username client-id: ${{ secrets.AZURE_CLIENT_ID}} --password-stdin
            - name: Build & push docker image to ACR 
              run: |
                docker build -t farhinACR.azurecr.io/myimage:${GITHUB_SHA::7} . 
                docker login ${{secrets.ACR_NAME}}.azurecr.io -u ${{secrets.AZURE_CLIENT_ID}} -P ${{secrets.AZURE_CLIENT_SECRET}}
                docker push ${{secrets.ACR_NAME}}.azurecr.io/myimage:${GITHUB_SHA::7}
              env:
                AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
                AZURE_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}

            - name: Pull Docker Image from ACR 
              run: |
                docker login farhinACR.azurecr.io -u ${{secrets.AZURE_CLIENT_ID}} -p ${{secrets.AZURE_CLIENT_SECRET}}
                docker pull farhinACR.azurecr.io/myimage:${GITHUB_SHA::7}
              env:
                AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
                AZURE_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}


            - name: Set Up Kubectl 
              uses: azure/setup-kubectl@v3
              with:
                 version: 'latest'

            - name: Get AKS credentials
              run: |
               az aks get-credentials --resource-group aksResurceGroup --name ns-dev

                - name: Deploy to AKS 
                  run: |
                  kubectl apply -f deployment.yml
              
